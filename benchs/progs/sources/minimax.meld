include #minimax-base.meld

build-next-plays(A, Game, NextPlayer, X, X, RootPlayer, 0, Play, Depth) -o score(A, minimax_points2(Game, RootPlayer), Play).
build-next-plays(A, Game, RootPlayer, X, X, RootPlayer, N, Play, Depth), N > 0
   -o maximize(A, N, mininf, 0).
build-next-plays(A, Game, NextPlayer, X, X, RootPlayer, N, Play, Depth), N > 0, NextPlayer <> RootPlayer
   -o minimize(A, N, maxinf, 0).
build-next-plays(A, Game, NextPlayer, X, T, RootPlayer, Descendants, Play, Depth), array_get(Game, X) = 0
   -o build-next-plays(A, Game, NextPlayer, X + 1, T, RootPlayer, Descendants + 1, Play, Depth),
      exists B. (play(B, array_set(Game, X, NextPlayer), if NextPlayer = 1 then 2 else 1 end, X, RootPlayer, Depth + 1), back(B, A)).
build-next-plays(A, Game, NextPlayer, X, T, RootPlayer, Descendants, Play, Depth)
   -o build-next-plays(A, Game, NextPlayer, X + 1, T, RootPlayer, Descendants, Play, Depth).

